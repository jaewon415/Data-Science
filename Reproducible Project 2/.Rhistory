download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
close(storm)
unlink("storm.csv.bz2")
}
if(any("storm" == ls())) {
storm <- read.csv("storm.csv", sep = ",")
}
remove(v)
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
close(storm)
unlink("storm.csv.bz2")
}
if(any("storm" == ls())) {
storm <- read.csv("storm.csv", sep = ",")
}
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
#close(storm)
if(any("storm" != ls())) {
storm <- read.csv("storm.csv", sep = ",")
}
{}
}
if(!any("storm" == ls())) {
storm <- read.csv("storm.csv", sep = ",")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("storm.csv.bz2", "w"), sep = ",")
}
setwd("C:/Users/jaewo/Desktop/Reproducible Project 2")
setwd("C:/Users/jaewo/Desktop/Reproducible Project 2")
csv.url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
dest.file <- "./storm.csv.bz2"
Sys.setlocale("LC_ALL", "English")
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
}
csv.url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
dest.file <- "./storm.csv"
Sys.setlocale("LC_ALL", "English")
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
}
Sys.setlocale("LC_ALL", "English")
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv"), sep = ",")
}
setwd("C:/Users/jaewo/Desktop/Reproducible Project 2")
csv.url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
dest.file <- "./storm.csv"
Sys.setlocale("LC_ALL", "English")
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv"), sep = ",")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("storm.csv", "w"), sep = ",")
}
close(storm)
unlink("storm.csv")
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv", "w"), sep = ",")
close(storm)
unlink("storm.csv")
}
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("./storm.csv", "w"), sep = ",")
close(storm)
unlink("storm.csv")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("./storm.csv", "w"), sep = ",")
}
rm(storm)
setwd("C:/Users/jaewo/Desktop/Reproducible Project 2")
csv.url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
dest.file <- "./storm.csv"
Sys.setlocale("LC_ALL", "English")
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("./storm.csv", "w"), sep = ",")
close(storm)
unlink("storm.csv")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("./storm.csv", "w"), sep = ",")
close(storm)
unlink("storm.csv")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("./storm.csv", "w"), sep = ",", header = TRUE)
close(storm)
unlink("storm.csv")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("./storm.csv", "w"), sep = ",")
close(storm)
unlink("storm.csv")
}
unlink("storm.csv.bz2")
unlink("storm.csv")
setwd("C:/Users/jaewo/Desktop/Reproducible Project 2")
csv.url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
dest.file <- "./storm.csv.bz2"
Sys.setlocale("LC_ALL", "English")
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
close(storm)
unlink("storm.csv.bz2")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
close(storm)
unlink("storm.csv.bz2")
}
close(./storm.csv)
close("./storm.csv")
unlink("./storm.csv")
rm(storm)
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
close(storm)
unlink("storm.csv.bz2")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
close(storm)
unlink("storm.csv.bz2")
}
unlink("storm.csv.bz2")
View(storm)
df <- storm
names(df) <- make.names(names(df))
View(df)
View(storm)
make.names(names(df))
names(df)
rm(df)
library("dplyr")
analysis <- select(storm, "EVTYPE", "FATALITIES", "INJURIES", "PROPDMG",
"PROPDMGEXP","CROPDMG", "CROPDMGEXP")
str(storage.mode())
str(storm)
analysis <- select(storm, EVTYPE, FATALITIES, INJURIES, PROPDMG,
PROPDMGEXP, CROPDMG, CROPDMGEXP)
install.packages()
install.packages()[1]
install.packages("")
s
?sapply
class(analysis$PROPDMGEXP)
unique(analysis$PROPDMGEXP)
length(unique(analysis$PROPDMGEXP))
unique(analysis$PROPDMGEXP)
unique(analysis$CROPDMGEXP)
10^6
1000000
c("", "L", 1:6)
c("", "L", 1:6)  %in% "L"
any(c("", "L", 1:6)  %in% "L")
change.exponent <- function(column.vector) {
column.vector <- tolower(column.vector)
if (column.vector %in% "k") {
return(3)
} else if (column.vector %in% "m") {
return(6)
} else if (column.vector %in% "b") {
return(9)
} else if (column.vector %in% "h") {
return(2)
} else if (column.vector %in5 c("", "-", "?", "+")) {
return(0)
} else {
return(column.vector)
}
}
change.exponent <- function(column.vector) {
column.vector <- tolower(column.vector)
if (column.vector %in% "k") {
return(3)
} else if (column.vector %in% "m") {
return(6)
} else if (column.vector %in% "b") {
return(9)
} else if (column.vector %in% "h") {
return(2)
} else if (column.vector %in% c("", "-", "?", "+")) {
return(0)
} else {
return(column.vector)
}
}
num <- sapply(analysis$PROPDMGEXP, change.exponent(i))
num <- sapply(analysis$PROPDMGEXP, change.exponent
)
head(num)
unique(num)
unique(analysis$PROPDMGEXP)
Rm(num)
rm(num)
rm(change.exponent())
rm(change.exponent
)
names(analysis)
names(analysis$CROPDMGEXP)
unique(analysis$CROPDMGEXP)
analysis$PROPDMGEXP <- tolower(analysis$PROPDMGEXP)
analysis$CROPDMGEXP <- tolower(analysis$CROPDMGEXP)
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% c("", "-", "?", "+")] <- 0
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "k"] <- 3
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "m"] <- 6
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "b"] <- 9
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "h"] <- 2
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% c("", "?")] <- 0
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% "k"] <- 3
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% "m"] <- 6
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% "b"] <- 9
View(storm)
View(analysis)
class(analysis$PROPDMGEXP)
analysis1 <- analysis
analysis1 <- transform(analysis, some = paste(analysis1$PROPDMGEXP, analysis1$CROPDMGEXP))
View(analysis1)
analysis1 <- transform(analysis1, prop.cost = as.numeric(analysis$PROPDMG) *
(10^(as.numeric(analysis$PROPDMGEXP))))
View(analysis1)
analysis$PROPDMGEXP <- tolower(analysis$PROPDMGEXP)
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% c("", "-", "?", "+")] <- 0
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "k"] <- 3
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "m"] <- 6
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "b"] <- 9
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "h"] <- 2
analysis <- transform(analysis, prop.cost = as.numeric(analysis$PROPDMG) *
(10^(as.numeric(analysis$PROPDMGEXP))))
analysis$CROPDMGEXP <- tolower(analysis$CROPDMGEXP)
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% c("", "?")] <- 0
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% "k"] <- 3
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% "m"] <- 6
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% "b"] <- 9
analysis <- transform(analysis, crop.cost = as.numeric(analysis$CROPDMG) *
(10^(as.numeric(analysis$CROPDMGEXP))))
View(analysis)
rm(analysis1)
analysis <- transform(analysis, total.cost = crop.cost + prop.cost)
View(analysis)
unique(analysis$EVTYPE)
?ddply
install.packages("plyr")
library(ddply)
library(plyr)
?ddply
?aggregate]
?aggregate
aggregate(EVTYPE ~ FATALITIES, analysis)
aggregate(EVTYPE ~ FATALITIES, analysis, sum)
aggregate(FATALITIES ~ EVTYPE, analysis, sum)
aggregate(FATALITIES + INJURIES ~ EVTYPE, analysis, sum)
aggregate(FATALITIES ~ EVTYPE, analysis, sum)
sort(aggregate(FATALITIES ~ EVTYPE, analysis, sum))
sort(aggregate(FATALITIES ~ EVTYPE, analysis, sum)[,2])
aggregate(FATALITIES ~ EVTYPE, analysis, sum)
fatality.sum <- aggregate(FATALITIES ~ EVTYPE, analysis, sum)
injury.sum <- aggregate(INJURIES ~ EVTYPE, analysis, sum)
?order
fatality.sum <- fatality.sum[order(fatality.sum$FATALITIES), ]
head(fatality.sum)
fatality.sum <- fatality.sum[order(fatality.sum$FATALITIES, decreasing = FALSE), ]
head(fatality.sum)
fatality.sum <- fatality.sum[order(fatality.sum$FATALITIES, decreasing = TRUE), ]
head(fatality.sum)
injury.sum <- injury.sum[order(injury.sum$INJURIES, decreasing = TRUE), ]
head(injury.sum)
injury.fatality.sum <- aggregate(INJURIES + FATALITIES ~ EVTYPE, analysis, sum)
head(injury.fatality.sum)
fatality.sum <- fatality.sum[order(fatality.sum$FATALITIES, decreasing = TRUE), ]
injury.sum <- injury.sum[order(injury.sum$INJURIES, decreasing = TRUE), ]
injury.fatality.sum <- injury.fatality.sum[order(injury.fatality.sum$`INJURIES + FATALITIES`, decreasing = TRUE), ]
head(injury.fatality.sum)
economic.crop <- aggregate(crop.cost ~ EVTYPE, analysis, sum)
head(economic.crop)
economic.prop <- aggregate(prop.cost ~ EVTYPE, analysis, sum)
economic.total <- aggregate(total.cost ~ EVTYPE, analysis, sum)
economic.crop <- economic.crop[order(economic.crop$crop.cost, decreasing = TRUE)]
economic.prop <- economic.prop[order(economic.prop$prop.cost, decreasing = TRUE)]
economic.prop <- aggregate(prop.cost ~ EVTYPE, analysis, sum)
economic.total <- aggregate(total.cost ~ EVTYPE, analysis, sum)
head(economic.prop)
economic.crop <- economic.crop[order(economic.crop$crop.cost, decreasing = TRUE),]
economic.prop <- economic.prop[order(economic.prop$prop.cost, decreasing = TRUE),]
economic.total <- economic.total[order(economic.total$total.cost, decreasing = TRUE),]
head(economic.prop)
head(economic.total)
head(economic.total, 10)
fatal.graph <- head(fatality.sum, 10)
injur.graph <- head(injury.sum, 10)
if.graph <- head(injury.fatality.sum, 10)
library("ggplot2")
fatal <- ggplot(fatal, mapping = aes(EVTYPE, FATALITIES))
fatal <- ggplot(fatal.graph, mapping = aes(EVTYPE, FATALITIES))
fatal + geom_bar(stat = "identity")
fatal.graph$EVTYPE <- factor(fatal.graph$EVTYPE, levels = fatal.graph$EVTYPE[order(fatal.graph$FATALITIES)])
fatal <- ggplot(fatal.graph, mapping = aes(EVTYPE, FATALITIES))
fatal + geom_bar(stat = "identity")
fatal.graph$EVTYPE <- factor(fatal.graph$EVTYPE, levels = fatal.graph$EVTYPE[order(fatal.graph$FATALITIES, decreasing = TRUE)])
fatal <- ggplot(fatal.graph, mapping = aes(EVTYPE, FATALITIES))
fatal + geom_bar(stat = "identity")
injur.graph$EVTYPE <- factor(injur.graph$EVTYPE, levels = injur.graph$EVTYPE[order(injur.graph$INJURIES, decreasing = TRUE)])
injur <- ggplot(injur.graph, mapping = aes(EVTYPE, INJURIES))
injur + geom_bar(stat = "identity")
if.graph
if.graph$EVTYPE <- factor(if.graph$EVTYPE, levels = if.graph$EVTYPE[order(if.graph$`INJURIES + FATALITIES`, decreasing = TRUE)])
if.gg <- ggplot(if.graph, mapping = aes(EVTYPE, INJURIES + FATALITIES))
if.gg + geom_bar(stat = "identity")
if.graph$EVTYPE <- factor(if.graph$EVTYPE, levels = if.graph$EVTYPE[order(if.graph$`INJURIES + FATALITIES`, decreasing = TRUE)])
if.gg <- ggplot(if.graph, mapping = aes(EVTYPE, "INJURIES + FATALITIES"))
if.gg + geom_bar(stat = "identity")
if.graph <- head(injury.fatality.sum, 10)
if.graph$EVTYPE <- factor(if.graph$EVTYPE, levels = if.graph$EVTYPE[order(if.graph$`INJURIES + FATALITIES`, decreasing = TRUE)])
if.gg <- ggplot(if.graph, mapping = aes(EVTYPE, `INJURIES + FATALITIES`))
if.gg + geom_bar(stat = "identity")
fatal + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Number of Fatalities", main = "Top 10 USA SEVERE WEATHER FATALITIES")
fatal + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Number of Fatalities", title = "Top 10 USA SEVERE WEATHER FATALITIES")
if.graph$EVTYPE <- factor(if.graph$EVTYPE, levels = if.graph$EVTYPE[order(if.graph$`INJURIES + FATALITIES`, decreasing = TRUE)])
if.gg <- ggplot(if.graph, mapping = aes(EVTYPE, `INJURIES + FATALITIES`))
if.gg + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Number of FATALITY + INJURY", title = "Top 10 USA SEVERE WEATHER IMPACT ON HUMAN")
economic.crop <- head(economic.crop, 10)
economic.prop <- head(economic.prop, 10)
economic.total <- head(economic.total, 10)
?facotr
?factor
economic.crop$EVTYPE <- factor(economic.crop$EVTYPE, levels = economic.crop$EVTYPE[order(economic.crop$crop.cost, decreasing = TRUE)])
economic.prop$EVTYPE <- factor(economic.prop$EVTYPE, levels = economic.prop$EVTYPE[order(economic.prop$prop.cost, decreasing = TRUE)])
economic.total$EVTYPE <- factor(economic.total$EVTYPE, levels = economic.total$EVTYPE[order(economic.total$total.cost, decreasing = TRUE)])
crop <- ggplot(economic.crop, mapping = aes(EVTYPE, crop.cost))
crop + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Cost of Crop", title = "Top 10 USA SEVERE WEATHER's IMPACT ON CROP")
<-
total <- ggplot(economic.total, mapping = aes(EVTYPE, total.cost))
total + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Cost of ECONOMICAL DAMAGE", title = "Top 10 USA SEVERE WEATHER's IMPACT ON BOTH PROP AND CROP")
fatal.graph
fatal.graph[1]
fatal.graph[1,]
injury.rankone <- injur.graph[1,]
if.rankone <- if.graph[1,]
prop.rankone <- economic.prop[1,]
economic.damage.rankone <- economic.total[1,]
prop.rankone <- economic.prop[1,]
crop.rankone <- economic.crop[1,]
?install.packages
install.packages(zoo)
install.packages()[, "Packages"]
if.graph$EVTYPE <- factor(if.graph$EVTYPE, levels = if.graph$EVTYPE[order(if.graph$`INJURIES + FATALITIES`, decreasing = TRUE)])
if.gg <- ggplot(if.graph, mapping = aes(EVTYPE, `INJURIES + FATALITIES`))
if.gg + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "# FATALITY and INJURY", title = "Top 10 USA SEVERE WEATHER IMPACT ON HUMAN")
if.rankone <- if.graph[1,]
total <- ggplot(economic.total, mapping = aes(EVTYPE, total.cost))
total + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Cost of ECONOMICAL DAMAGE", title = "Top 10 USA SEVERE WEATHER's IMPACT ON BOTH PROP AND CROP")
economic.damage.rankone <- economic.total[1,]
if.graph$EVTYPE <- factor(if.graph$EVTYPE, levels = if.graph$EVTYPE[order(if.graph$`INJURIES + FATALITIES`, decreasing = TRUE)])
if.gg <- ggplot(if.graph, mapping = aes(EVTYPE, `INJURIES + FATALITIES`))
if.gg + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "# FATALITY and INJURY", title = "Top 10 USA SEVERE WEATHER IMPACT ON HUMAN")
if.rankone <- if.graph[1,]
(fatal.rankone)
fatal.rankone <- fatal.grapj[1,]
(fatal.rankone)
TYPE <- factor(fatal.graph$EVTYPE, levels = fatal.graph$EVTYPE[order(fatal.graph$FATALITIES, decreasing = TRUE)])
fatal <- ggplot(fatal.graph, mapping = aes(EVTYPE, FATALITIES))
fatal + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Number of Fatalities", title = "Top 10 USA SEVERE WEATHER's HUMAN FATALITIES")
fatal.rankone <- fatal.grapj[1,]
(fatal.rankone)
fatal.rankone <- fatal.graph[1,]
(fatal.rankone)
injur.graph$EVTYPE <- factor(injur.graph$EVTYPE, levels = injur.graph$EVTYPE[order(injur.graph$INJURIES, decreasing = TRUE)])
injur <- ggplot(injur.graph, mapping = aes(EVTYPE, INJURIES))
injur + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Number of Injuries", title = "Top 10 USA SEVERE WEATHER's HUMAN INJURIES")
injury.rankone <- injur.graph[1,]
(injury.rankone)
TYPE <- factor(if.graph$EVTYPE, levels = if.graph$EVTYPE[order(if.graph$`INJURIES + FATALITIES`, decreasing = TRUE)])
if.gg <- ggplot(if.graph, mapping = aes(EVTYPE, `INJURIES + FATALITIES`))
if.gg + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "# FATALITY and INJURY", title = "Top 10 USA SEVERE WEATHER IMPACT ON HUMAN")
if.rankone <- if.graph[1,]
(if.rankone
)
crop <- ggplot(economic.crop, mapping = aes(EVTYPE, crop.cost))
crop + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Cost of Crop", title = "Top 10 USA SEVERE WEATHER's IMPACT ON CROP")
crop.rankone <- economic.crop[1,]
print(crop.rankone)
prop <- ggplot(economic.prop, mapping = aes(EVTYPE, prop.cost))
prop + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Cost of Property", title = "Top 10 USA SEVERE WEATHER's IMPACT ON Property")
prop.rankone <- economic.prop[1,]
print(prop.rankone)
(economic.damage.rankone)
total <- ggplot(economic.total, mapping = aes(EVTYPE, total.cost))
total + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Cost of ECONOMICAL DAMAGE", title = "Top 10 USA SEVERE WEATHER's IMPACT ON BOTH PROP AND CROP")
economic.damage.rankone <- economic.total[1,]
(economic.damage.rankone)
if.graph$EVTYPE <- factor(if.graph$EVTYPE, levels = if.graph$EVTYPE[order(if.graph$`INJURIES + FATALITIES`, decreasing = TRUE)])
if.gg <- ggplot(if.graph, mapping = aes(EVTYPE, `INJURIES + FATALITIES`))
if.gg + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "# FATALITY and INJURY", title = "Top 10 USA SEVERE WEATHER IMPACT ON HUMAN")
if.rankone <- if.graph[1,]
(if.rankone)
total <- ggplot(economic.total, mapping = aes(EVTYPE, total.cost))
total + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Cost of ECONOMICAL DAMAGE", title = "Top 10 USA SEVERE WEATHER's IMPACT ON BOTH PROP AND CROP")
economic.damage.rankone <- economic.total[1,]
(economic.damage.rankone)
# Chunk 1: cache.csv
#setwd() #Set your directory
csv.url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
dest.file <- "./storm.csv.bz2"
Sys.setlocale("LC_ALL", "English")
if (!file.exists(dest.file)) {
download.file(csv.url, destfile = dest.file)
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
unlink("storm.csv.bz2")
}
if(!any("storm" == ls())) {
storm <- read.csv(bzfile("storm.csv.bz2"), sep = ",")
unlink("storm.csv.bz2")
}
#install.packages(c("dplyr", "ggplot2")) #uncomment it for installation
library("dplyr")
library("ggplot2")
# Chunk 2: dataselection
#Shift from original data to data required for this project.
analysis <- select(storm, EVTYPE, FATALITIES, INJURIES, PROPDMG,
PROPDMGEXP, CROPDMG, CROPDMGEXP)
# Chunk 3: healthdata
#HEALTH
fatality.sum <- aggregate(FATALITIES ~ EVTYPE, analysis, sum)
injury.sum <- aggregate(INJURIES ~ EVTYPE, analysis, sum)
injury.fatality.sum <- aggregate(INJURIES + FATALITIES ~ EVTYPE, analysis, sum)
fatality.sum <- fatality.sum[order(fatality.sum$FATALITIES, decreasing = TRUE), ]
injury.sum <- injury.sum[order(injury.sum$INJURIES, decreasing = TRUE), ]
injury.fatality.sum <- injury.fatality.sum[order(injury.fatality.sum$`INJURIES + FATALITIES`, decreasing = TRUE), ]
fatal.graph <- head(fatality.sum, 10)
injur.graph <- head(injury.sum, 10)
if.graph <- head(injury.fatality.sum, 10)
# Chunk 4: fatalitygraph
fatal.graph$EVTYPE <- factor(fatal.graph$EVTYPE, levels = fatal.graph$EVTYPE[order(fatal.graph$FATALITIES, decreasing = TRUE)])
fatal <- ggplot(fatal.graph, mapping = aes(EVTYPE, FATALITIES))
fatal + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Number of Fatalities", title = "Top 10 USA SEVERE WEATHER's HUMAN FATALITIES")
fatal.rankone <- fatal.graph[1,]
(fatal.rankone)
# Chunk 5: injurygraph
injur.graph$EVTYPE <- factor(injur.graph$EVTYPE, levels = injur.graph$EVTYPE[order(injur.graph$INJURIES, decreasing = TRUE)])
injur <- ggplot(injur.graph, mapping = aes(EVTYPE, INJURIES))
injur + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Number of Injuries", title = "Top 10 USA SEVERE WEATHER's HUMAN INJURIES")
injury.rankone <- injur.graph[1,]
(injury.rankone)
# Chunk 6: healthtotal
if.graph$EVTYPE <- factor(if.graph$EVTYPE, levels = if.graph$EVTYPE[order(if.graph$`INJURIES + FATALITIES`, decreasing = TRUE)])
if.gg <- ggplot(if.graph, mapping = aes(EVTYPE, `INJURIES + FATALITIES`))
if.gg + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "# FATALITY and INJURY", title = "Top 10 USA SEVERE WEATHER IMPACT ON HUMAN")
if.rankone <- if.graph[1,]
(if.rankone)
# Chunk 7: economydata
#ECONOMY
#Setting up the column solely for property damage cost
analysis$PROPDMGEXP <- tolower(analysis$PROPDMGEXP)
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% c("", "-", "?", "+")] <- 0
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "k"] <- 3
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "m"] <- 6
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "b"] <- 9
analysis$PROPDMGEXP[analysis$PROPDMGEXP %in% "h"] <- 2
analysis <- transform(analysis, prop.cost = as.numeric(analysis$PROPDMG) *
(10^(as.numeric(analysis$PROPDMGEXP))))
#Setting up the column solely for crop damage cost
analysis$CROPDMGEXP <- tolower(analysis$CROPDMGEXP)
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% c("", "?")] <- 0
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% "k"] <- 3
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% "m"] <- 6
analysis$CROPDMGEXP[analysis$CROPDMGEXP %in% "b"] <- 9
analysis <- transform(analysis, crop.cost = as.numeric(analysis$CROPDMG) *
(10^(as.numeric(analysis$CROPDMGEXP))))
#Total Cost: Property Damage Cost Plus Crop Damage Cost
analysis <- transform(analysis, total.cost = crop.cost + prop.cost)
#ECONOMIC IMPACT
economic.crop <- aggregate(crop.cost ~ EVTYPE, analysis, sum)
economic.prop <- aggregate(prop.cost ~ EVTYPE, analysis, sum)
economic.total <- aggregate(total.cost ~ EVTYPE, analysis, sum)
economic.crop <- economic.crop[order(economic.crop$crop.cost, decreasing = TRUE),]
economic.prop <- economic.prop[order(economic.prop$prop.cost, decreasing = TRUE),]
economic.total <- economic.total[order(economic.total$total.cost, decreasing = TRUE),]
economic.crop <- head(economic.crop, 10)
economic.prop <- head(economic.prop, 10)
economic.total <- head(economic.total, 10)
economic.crop$EVTYPE <- factor(economic.crop$EVTYPE, levels = economic.crop$EVTYPE[order(economic.crop$crop.cost, decreasing = TRUE)])
economic.prop$EVTYPE <- factor(economic.prop$EVTYPE, levels = economic.prop$EVTYPE[order(economic.prop$prop.cost, decreasing = TRUE)])
economic.total$EVTYPE <- factor(economic.total$EVTYPE, levels = economic.total$EVTYPE[order(economic.total$total.cost, decreasing = TRUE)])
# Chunk 8: crop
crop <- ggplot(economic.crop, mapping = aes(EVTYPE, crop.cost))
crop + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Cost of Crop", title = "Top 10 USA SEVERE WEATHER's IMPACT ON CROP")
crop.rankone <- economic.crop[1,]
(crop.rankone)
# Chunk 9: prop
prop <- ggplot(economic.prop, mapping = aes(EVTYPE, prop.cost))
prop + geom_bar(stat = "identity") + labs(x = "TYPE OF EVENT", y = "Cost of Property", title = "Top 10 USA SEVERE WEATHER's IMPACT ON Property")
prop.rankone <- economic.prop[1,]
(prop.rankone)
